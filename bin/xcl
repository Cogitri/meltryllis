#!/usr/bin/bash
# xcl - show changelogs from xbps-src templates into the terminal

find_changelog() {
	local changelogs dirpath filelist archive

	# filenames of changelogs, the ordering decides the priority
	# the names are case insesitive
	changelogs="Changes NEWS history ReleaseNotes release-notes history changelog"

	# This one is specific for mesa, our libGL package
	changelogs+=" relnotes/${version}"

	# This one is specific for python-Django
	changelogs+=" releases/${version}"

	# This is troubling since it is normally used for future versions
	# but there are packages like NetAuth that use it
	changelogs+=" ROADMAP"

	# Perl packages have a set changelog
	[[ -z "${pkgname##perl-*}" ]] &&
		changelogs="Changes"

	# if changelog is defined on the template then just use it
	[[ "$changelog" ]] && changelogs="$(basename "$changelog")"

	dirpath="${xdistdir}/hostdir/sources/${pkgname}-${version}"
	
	# Check if we have the directory for the distfile, if not we use xbps-src
	# to fetch them, we also check if the dir is empty
	if ! [ -d "$dirpath" ] || ! find "$dirpath" -type f ! -empty; then
		ansi --yellow-intense "FETCHING DISTFILE FOR "
		ansi -n "${pkgname}"
		xgensum -f -i srcpkgs/"${pkgname}" >/dev/null 2>&1
	fi

	# List of files, we grep it to find the changelog
	archive="$(find "${dirpath}" -iname '*.tar.*' -type f -print -quit)"
	filelist="$(tar --list --file="$archive")"

	for cl in $changelogs; do
		# search for the changelog name in the filelist, the slash on the start
		# is to guarantee that the name of the directory/file is matched from the
		# beggining
		clf="$(grep -i "/$cl" <<< "$filelist" | head -1)"
		if [[ "$clf" ]]; then
			# Filter all matches that have a slash after the changelog name
			# which indicates that it is a directory (which we don't care about)
			# and not a file
			grep -iq "$cl/" <<< "$clf" && continue
			if grep -q '.html$' <<< "$clf"; then
				tar --to-stdout --extract --file="$archive" "$clf" \
					| elinks -dump -dump-color-mode 1 | less -R
			else
				tar --to-stdout --extract --file="$archive" "$clf" \
					| less -R
			fi
			echo $clf
			return 0
		fi
	done

	# We reach here if no changelog files are found
	return 1
}

# use xdistdir to find out where we are working with
# if no arg is provided then use the current branch to try and guess
xdistdir=$(xdistdir)
pkg="${1:-$(git rev-parse --abbrev-ref HEAD)}"

[ -f "${xdistdir}"/srcpkgs/"${pkg}"/template ] ||
	{
		ansi --red-intense "PACKAGE "
		ansi "$pkg"
		ansi -n --red-intense " DOESN'T EXIST"
		exit 1
	}
# Source the template to get the changelog url and other information
source "${xdistdir}"/srcpkgs/"${pkg}"/template >/dev/null 2>&1

find_changelog "$(echo $wrksrc | sed 's|-[0-9].*||g')"
