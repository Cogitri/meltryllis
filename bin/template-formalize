#!/bin/sh
set -eu

replace_field() {
	sed -ri "s|(^$1=.*)$2(.*)|\\1$3\\2|gI" "$TEMPLATE_FILE"
}

replace_many() {
	# Takes <field> <final> <replaced ...>
	# replaces all the replaced with final on field
	field="$1"
	result="$2"
	shift
	shift

	while [ $# -gt 0 ]; do
		replace_field "$field" "$1" "$result"
	done
}

# Replaces any amount of license strings with one string
#
# 1st arg -- string to replace
# any other arg -- string to be replaced
#
# Process
# 1. grab license line with grep
# 2. grab everything between double-quotes
# 3. transform every comma into a newline (comma is separator for licenses)
# 4. remove spaces
# 5. parse over args and replace license with proper license with sed
# 6. rebuild the string with awk and sed, trasnform every newline into command
# and a space, then replace the last space comma with a newline
# 7. replace the license field using sed
replace_license() {
	licenses="$(grep '^license=' "$TEMPLATE_FILE" |
				sed -r 's|license="(.*)"|\1|gI' |
				tr , \\n | tr -d ' ')"

	final="$1" ; shift

	while [ $# -gt 0 ]; do
		licenses="$(echo "$licenses" | sed "s|^$1$|$final|gI")"
		shift
	done
	licenses="$(echo "$licenses" | awk 1 ORS=', ' | sed 's|, $|\n|g')"

	sed -i "s|^license=.*|license=\"$licenses\"|g" "$TEMPLATE_FILE"
}

rewrite_header() {
	# Get the package name
	pkgname="$( grep "^pkgname=" "$TEMPLATE_FILE" |
				tr -d '"' | tr -d "'" |
				sed -e 's|pkgname=||g' )"
	# Rewrites the header to conform to
	# # Template file for '$pkgname'
	sed -i "1 s|^.*$|# Template file for '$pkgname'|g" "$TEMPLATE_FILE"
}

unquote_field() {
	 sed -ri "s|($1=)\"(.*)\"|\\1\\2|g" "$TEMPLATE_FILE"
}

quote_field() {
	sed -ri "s|($1=)(.*)|\\1\"\\2\"|g" "$TEMPLATE_FILE"
}

rewrite_tests() {
	# Replaces '[ -n' with '['
	sed -i "s|\\[ -n|\\[|g" "$TEMPLATE_FILE"
}

_get_fields() {
	grep '^[A-Za-z].*\=' "$TEMPLATE_FILE" | cut -d= -f1
}

quote_varfields() {
	# Quotes fields that have variables being expanded
	# Grab the current variables declared
	fields="$(_get_fields)"

	for field in $fields; do
		# Check if the field contain sigil ($), denoting a variable
		# if it isn't found we skip since it doesn't matter to us
		grep "^${field}\\=" "$TEMPLATE_FILE" | grep -q '\$' || continue
		# Check if the field is already quoted
		grep "^${field}\\=" "$TEMPLATE_FILE" | grep -q '"' && continue

		quote_field "$field"
	done
}

unquote_varfields() {
	# quote fields that don't have variables being expanded and neither
	# have spaces, this ignores variables that are mean't to be quoted like
	# license=
	fields="$(_get_fields)"

	# Strip fields that are meant to be quoted, but may not have identifiers
	# that we used to discard, like having spaces, expanding variables
	fields="$(echo "$fields" |
		grep -Ev 'configure_args|depends|homepage|license|distfiles|replaces|provides|conflicts|reverts|pycompile')"

	for field in $fields; do
		# Check if the field contain sigil ($), denoting a variable
		# if it isn't found we skip since it doesn't matter to us
		grep "^${field}\\=" "$TEMPLATE_FILE" | grep -q '\$' && continue
		# check if field contain spaces
		grep "^${field}\\=" "$TEMPLATE_FILE" | grep -q '[[:space:]]' && continue
		# check if the field is already unquoted
		grep "^${field}\\=" "$TEMPLATE_FILE" | grep -q '"' || continue

		unquote_field "$field"
	done
}

while [ $# -gt 0 ]; do
	pkgs="$(find "$1" -type f -iname template)"
	for pkg in $pkgs; do
		export TEMPLATE_FILE="$pkg"
		rewrite_header
		rewrite_tests

		replace_field maintainer "Christian Neukirchen <chneukirchen@gmail.com>" \
					  "Leah Neukirchen <leah@vuxu.org>"
		replace_field maintainer "Toyam Cox <Vaelatern@gmail.com>" \
					  "Toyam Cox <Vaelatern@voidlinux.eu>"
		replace_field maintainer "Duncaen <mail@duncano.de>" \
					  "Duncaen <duncaen@voidlinux.eu>"
		replace_field license "Artistic, GPL-1" "Artistic-1.0-Perl, GPL-1.0-or-later"
		replace_license "BSD-2-Clause" "2-Clause-BSD" "BSD-2"
		replace_license "BSD-3-Clause" "3-Clause-BSD" "BSD-3"
		replace_license "Unlicense" "unlicense" "the unlicense"
		replace_license "GPL-1.0-or-later" "GPL+" "GPL-1+"
		replace_license "GPL-2.0-or-later" "GPL-2+"
		replace_license "LGPL-2.0-or-later" "LGPL-2+"

		quote_varfields
		unquote_varfields
		unset TEMPLATE_FILE
	done
	shift
done
